@go.Package { name = "mikea/declix/resources/filesystem" }
abstract module mikea.declix.resources.FileSystem

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.7.0#/go.pkl" 
import ".../Resources.pkl"
import "../../content/Content.pkl"

typealias Missing = Resources.Missing

abstract class Node extends Resources.Resource {
    path: String
}

abstract class NodePresent {
    owner: String
    group: String
    permissions: String
}

open class File extends Node  {
    type: "file"
    state: Missing | FilePresent

    fixed id: String = type + ":" + path
    fixed determineStateCmd: String = """
        path="\(path)"
        if sudo test -f "$path"; then 
            echo "present: true" &&
            read -r hash _ < <(sudo sha256sum "$path") &&
            echo "sha256: $hash" &&
            sudo stat --printf="size: %s\\nowner: %U\\ngroup: %G\\npermissions: %a\\n" "$path"
        else 
            echo "present: false"; 
        fi
        """
}

class FilePresent extends NodePresent {
    content: Content.Content
}

class Dir extends Node  {
    type: "dir"
    state: Missing | DirPresent

    fixed id: String = type + ":" + path
    fixed determineStateCmd: String = """
        path="\(path)"
        if sudo test -d "$path"; then 
            echo "present: true" &&
            sudo stat --printf="owner: %U\\ngroup: %G\\npermissions: %a\\n" "$path"
        else 
            echo "present: false"; 
        fi
        """
}

class DirPresent extends NodePresent {
}
